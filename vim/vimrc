" General loading
" syntax enable
" set tabstop=4
" set number
" filetype indent on
" set autoindent
" set nocompatible
" filetype off
" set rtp+=/usr/share/vim/vimfiles/autoload/vundle.vim
" call vundle#begin()
call plug#begin('~/.vim/plugged')
" Plug 'VundleVim/Vundle.vim'
Plug 'scrooloose/syntastic'
Plug 'tpope/vim-surround'
Plug 'dense-analysis/ale'
Plug 'mattn/emmet-vim'
Plug 'VundleVim/Vundle.vim'
Plug 'scrooloose/nerdcommenter'
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-fugitive'
Plug 'preservim/nerdtree'
Plug 'kien/ctrlp.vim'
Plug 'godlygeek/tabular'
Plug 'plasticboy/vim-markdown'

" Testing time..
Plug 'vim-airline/vim-airline'
Plug 'altercation/vim-colors-solarized'
Plug 'majutsushi/tagbar'
Plug 'vim-airline/vim-airline-themes'
Plug 'valloric/youcompleteme'
Plug 'honza/vim-snippets'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-repeat'
Plug 'ervandew/supertab'
Plug 'junegunn/fzf'
Plug 'mileszs/ack.vim'
Plug 'pangloss/vim-javascript'
Plug 'easymotion/vim-easymotion'
Plug 'terryma/vim-multiple-cursors'
Plug 'nathanaelkane/vim-indent-guides'
Plug 'tpope/vim-endwise'
Plug 'kchmck/vim-coffee-script'
Plug 'morhetz/gruvbox'
Plug 'flazz/vim-colorschemes'
Plug 'vim-ruby/vim-ruby'
Plug 'mxw/vim-jsx'
Plug 'yggdroot/indentline'
Plug 'sirver/ultisnips'
Plug 'christoomey/vim-tmux-navigator'

call plug#end()

" End of vundle scripts
" call vundle#end()
" filetype plugin indent on

"Hide pyc files from nerdtree
let NERDTreeIgnore=['\.pyc$', '\~$'] "ignore files in NERDTree

" enable syntax highlighting
filetype plugin on
syntax enable

" Enable utf-8
set encoding=utf-8

" show line numbers
set number

" set tabs to have 4 spaces
set ts=4

" expand tabs into spaces
set expandtab

" when using the >> or << commands, shift lines by 4 spaces
set shiftwidth=4

" show the matching part of the pair for [] {} and ()
set showmatch

" Nerdtree
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") && v:this_session == "" | NERDTree | endif
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' a
map <C-s> :NERDTreeToggle<CR>
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
let g:NERDTreeDirArrowExpandable = '▸'
let g:NERDTreeDirArrowCollapsible = '▾'

"Add spaces after comment delimiters by default
let g:NERDSpaceDelims = 1

" Use compact syntax for prettified multi-line comments
let g:NERDCompactSexyComs = 1

" Align line-wise comment delimiters flush left instead of following code indentation
let g:NERDDefaultAlign = 'left'

" Set a language to use its alternate delimiters by default
let g:NERDAltDelims_python = 1

" Add your own custom formats or override the defaults
let g:NERDCustomDelimiters = { 'c': { 'left': '//*','right': '*/' } }

" Allow commenting and inverting empty lines (useful when commenting a region)
let g:NERDCommentEmptyLines = 1

" Enable trimming of trailing whitespace when uncommenting
let g:NERDTrimTrailingWhitespace = 1

" Enable NERDCommenterToggle to check all selected lines is commented or not 
let g:NERDToggleCheckAllLines = 1

"Custom functions
function RunCpp()
    :exec "silent ! g++ -o runningfile.out %" | redraw!
    :exec "! chmod +x runningfile.out"
    :exec "! ./runningfile.out"
    :exec "silent ! rm -rf runningfile.out" | redraw!
endfunction

function Runsh()
    :exec "silent ! chmod +x %" | redraw
    :exec "! ./%"
endfunction

function SetDate()
    :put =strftime(\"%d.%m.%y\")
endfunction

function PythonClass()
    r~/.vim/python/class.py
endfunction

" Custom keybinds
autocmd FileType python map <buffer> <F5> :w<CR>:exec '!python %' shellescape(@%, 1)<CR>
autocmd FileType python map <buffer> <F8> :w<CR>:call PythonClass()<CR>
autocmd FileType sh map <buffer> <F5> :w<CR>:call Runsh()<CR>
autocmd FileType cpp map <buffer> <F2> :w<CR>:call RunCpp()<CR>

autocmd BufNewFile lesson*.tex 0r ~/.vim/reflection_template.tex

map <S-T> :vs <CR>
map <C-c> <plug>NERDCommenterToggle
map <C-F10> :TagbarOpenAutoClose<Cr>
map <C-F11> :tab ba<CR>
map <C-F12> :vert ba<CR>
